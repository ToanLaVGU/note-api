# Name of the workflow
name: Python Tests

# Action to trigger the workflow -> In this case, the workflow is triggered when we push something to main branch
on:
  push:
    branches: [ "main" ]

# Define jobs
jobs:
  test:
    # Assign runner
    runs-on: ubuntu-latest

    # Strategy to run tests in parallel
    # strategy:
    #   max-parallel: 4

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Install required dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest-cov
          
      # Run tests with pytest in parallel and collect coverage
      - name: Test with pytest in general
        run: |
          pytest
          
      # Run tests with pytest in parallel and collect coverage
      - name: Run tests with pytest
        run: |
          pytest --cov=note_api --numprocesses=auto tests/

      # Display the test coverage
      - name: Display coverage report
        run: |
          pytest --cov=note_api --cov-report=term-missing
          
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
